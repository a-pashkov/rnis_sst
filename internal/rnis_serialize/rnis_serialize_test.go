package rnis_serialize

import (
	"fmt"
	"testing"
)

func TestRnisKeyDecode(t *testing.T) {
	//[{<<"NULL">>, undefined},
	// {<<"BINARY_255">>, <<1:(255*8)>>},
	// {<<"BINARY_65535">>, <<1, 1:(255*8)>>},
	// {<<"UINT1B_BEGIN">>, 0},
	// {<<"UINT1B_END">>, 255},
	// {<<"SINT1B_N_BEGIN">>, -128},
	// {<<"SINT1B_N_END">>, -1},
	// {<<"SINT4B_N_BEGIN">>, -2147483648},
	// {<<"SINT4B_N_END">>, -129},
	// {<<"SINT4B_P_BEGIN">>, 256},
	// {<<"SINT4B_P_END">>, 2147483647},
	// {<<"SINT8B_N_BEGIN">>, -16#8000000000000000},
	// {<<"SINT8B_N_END">>, -2147483649},
	// {<<"SINT8B_P_BEGIN">>, 2147483648},
	// {<<"SINT8B_P_END">>, 16#7FFFFFFFFFFFFFFF}]

	values := []byte{10, 66, 73, 78, 65, 82, 89, 95, 50, 53, 53, 1, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 1, 12, 66, 73, 78, 65, 82, 89, 95, 54, 53, 53, 51, 53, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 78, 85, 76, 76, 0, 14, 83, 73, 78, 84, 49, 66,
		95, 78, 95, 66, 69, 71, 73, 78, 20, 128, 12, 83, 73, 78, 84, 49, 66, 95, 78, 95, 69, 78, 68, 20, 255,
		14, 83, 73, 78, 84, 52, 66, 95, 78, 95, 66, 69, 71, 73, 78, 22, 128, 0, 0, 0, 12, 83, 73, 78, 84, 52,
		66, 95, 78, 95, 69, 78, 68, 22, 255, 255, 255, 127, 14, 83, 73, 78, 84, 52, 66, 95, 80, 95, 66, 69,
		71, 73, 78, 22, 0, 0, 1, 0, 12, 83, 73, 78, 84, 52, 66, 95, 80, 95, 69, 78, 68, 22, 127, 255, 255,
		255, 14, 83, 73, 78, 84, 56, 66, 95, 78, 95, 66, 69, 71, 73, 78, 23, 128, 0, 0, 0, 0, 0, 0, 0, 12, 83,
		73, 78, 84, 56, 66, 95, 78, 95, 69, 78, 68, 23, 255, 255, 255, 255, 127, 255, 255, 255, 14, 83, 73,
		78, 84, 56, 66, 95, 80, 95, 66, 69, 71, 73, 78, 23, 0, 0, 0, 0, 128, 0, 0, 0, 12, 83, 73, 78, 84, 56,
		66, 95, 80, 95, 69, 78, 68, 23, 127, 255, 255, 255, 255, 255, 255, 255, 12, 85, 73, 78, 84, 49, 66,
		95, 66, 69, 71, 73, 78, 10, 0, 10, 85, 73, 78, 84, 49, 66, 95, 69, 78, 68, 10, 255}
	k, err := Deserialize(values)
	if err != nil {
		fmt.Println(k, err)
	} else {
		for _, rec := range k {
			fmt.Println(rec)
		}
	}
}
